/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProtectedHowItWorksRouteImport } from './routes/_protected/how-it-works'
import { Route as ProtectedChangePasswordRouteImport } from './routes/_protected/change-password'
import { Route as ProtectedCartRouteImport } from './routes/_protected/cart'
import { Route as ProtectedAboutRouteImport } from './routes/_protected/about'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthSigninRouteImport } from './routes/_auth/signin'
import { Route as AuthOtpRouteImport } from './routes/_auth/otp'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgotPassword'
import { Route as ProtectedProfileIndexRouteImport } from './routes/_protected/profile/index'
import { Route as ProtectedProductsIndexRouteImport } from './routes/_protected/products/index'
import { Route as ProtectedOrdersIndexRouteImport } from './routes/_protected/orders/index'
import { Route as ProtectedCheckoutIndexRouteImport } from './routes/_protected/checkout/index'
import { Route as ProtectedProductsProductIdRouteImport } from './routes/_protected/products/$productId'
import { Route as ProtectedOrdersOrderIdRouteImport } from './routes/_protected/orders/$orderId'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedHowItWorksRoute = ProtectedHowItWorksRouteImport.update({
  id: '/how-it-works',
  path: '/how-it-works',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedChangePasswordRoute = ProtectedChangePasswordRouteImport.update({
  id: '/change-password',
  path: '/change-password',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedCartRoute = ProtectedCartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedAboutRoute = ProtectedAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => ProtectedRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRoute,
} as any)
const AuthOtpRoute = AuthOtpRouteImport.update({
  id: '/otp',
  path: '/otp',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgotPassword',
  path: '/forgotPassword',
  getParentRoute: () => AuthRoute,
} as any)
const ProtectedProfileIndexRoute = ProtectedProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedProductsIndexRoute = ProtectedProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedOrdersIndexRoute = ProtectedOrdersIndexRouteImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedCheckoutIndexRoute = ProtectedCheckoutIndexRouteImport.update({
  id: '/checkout/',
  path: '/checkout/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedProductsProductIdRoute =
  ProtectedProductsProductIdRouteImport.update({
    id: '/products/$productId',
    path: '/products/$productId',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedOrdersOrderIdRoute = ProtectedOrdersOrderIdRouteImport.update({
  id: '/orders/$orderId',
  path: '/orders/$orderId',
  getParentRoute: () => ProtectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forgotPassword': typeof AuthForgotPasswordRoute
  '/otp': typeof AuthOtpRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/about': typeof ProtectedAboutRoute
  '/cart': typeof ProtectedCartRoute
  '/change-password': typeof ProtectedChangePasswordRoute
  '/how-it-works': typeof ProtectedHowItWorksRoute
  '/orders/$orderId': typeof ProtectedOrdersOrderIdRoute
  '/products/$productId': typeof ProtectedProductsProductIdRoute
  '/checkout': typeof ProtectedCheckoutIndexRoute
  '/orders': typeof ProtectedOrdersIndexRoute
  '/products': typeof ProtectedProductsIndexRoute
  '/profile': typeof ProtectedProfileIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forgotPassword': typeof AuthForgotPasswordRoute
  '/otp': typeof AuthOtpRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/about': typeof ProtectedAboutRoute
  '/cart': typeof ProtectedCartRoute
  '/change-password': typeof ProtectedChangePasswordRoute
  '/how-it-works': typeof ProtectedHowItWorksRoute
  '/orders/$orderId': typeof ProtectedOrdersOrderIdRoute
  '/products/$productId': typeof ProtectedProductsProductIdRoute
  '/checkout': typeof ProtectedCheckoutIndexRoute
  '/orders': typeof ProtectedOrdersIndexRoute
  '/products': typeof ProtectedProductsIndexRoute
  '/profile': typeof ProtectedProfileIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/_auth/forgotPassword': typeof AuthForgotPasswordRoute
  '/_auth/otp': typeof AuthOtpRoute
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_protected/about': typeof ProtectedAboutRoute
  '/_protected/cart': typeof ProtectedCartRoute
  '/_protected/change-password': typeof ProtectedChangePasswordRoute
  '/_protected/how-it-works': typeof ProtectedHowItWorksRoute
  '/_protected/orders/$orderId': typeof ProtectedOrdersOrderIdRoute
  '/_protected/products/$productId': typeof ProtectedProductsProductIdRoute
  '/_protected/checkout/': typeof ProtectedCheckoutIndexRoute
  '/_protected/orders/': typeof ProtectedOrdersIndexRoute
  '/_protected/products/': typeof ProtectedProductsIndexRoute
  '/_protected/profile/': typeof ProtectedProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgotPassword'
    | '/otp'
    | '/signin'
    | '/signup'
    | '/about'
    | '/cart'
    | '/change-password'
    | '/how-it-works'
    | '/orders/$orderId'
    | '/products/$productId'
    | '/checkout'
    | '/orders'
    | '/products'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgotPassword'
    | '/otp'
    | '/signin'
    | '/signup'
    | '/about'
    | '/cart'
    | '/change-password'
    | '/how-it-works'
    | '/orders/$orderId'
    | '/products/$productId'
    | '/checkout'
    | '/orders'
    | '/products'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_protected'
    | '/_auth/forgotPassword'
    | '/_auth/otp'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_protected/about'
    | '/_protected/cart'
    | '/_protected/change-password'
    | '/_protected/how-it-works'
    | '/_protected/orders/$orderId'
    | '/_protected/products/$productId'
    | '/_protected/checkout/'
    | '/_protected/orders/'
    | '/_protected/products/'
    | '/_protected/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/how-it-works': {
      id: '/_protected/how-it-works'
      path: '/how-it-works'
      fullPath: '/how-it-works'
      preLoaderRoute: typeof ProtectedHowItWorksRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/change-password': {
      id: '/_protected/change-password'
      path: '/change-password'
      fullPath: '/change-password'
      preLoaderRoute: typeof ProtectedChangePasswordRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/cart': {
      id: '/_protected/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof ProtectedCartRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/about': {
      id: '/_protected/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof ProtectedAboutRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/otp': {
      id: '/_auth/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof AuthOtpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/forgotPassword': {
      id: '/_auth/forgotPassword'
      path: '/forgotPassword'
      fullPath: '/forgotPassword'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_protected/profile/': {
      id: '/_protected/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/products/': {
      id: '/_protected/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProtectedProductsIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/orders/': {
      id: '/_protected/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof ProtectedOrdersIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/checkout/': {
      id: '/_protected/checkout/'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof ProtectedCheckoutIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/products/$productId': {
      id: '/_protected/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProtectedProductsProductIdRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/orders/$orderId': {
      id: '/_protected/orders/$orderId'
      path: '/orders/$orderId'
      fullPath: '/orders/$orderId'
      preLoaderRoute: typeof ProtectedOrdersOrderIdRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthOtpRoute: typeof AuthOtpRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthOtpRoute: AuthOtpRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ProtectedRouteChildren {
  ProtectedAboutRoute: typeof ProtectedAboutRoute
  ProtectedCartRoute: typeof ProtectedCartRoute
  ProtectedChangePasswordRoute: typeof ProtectedChangePasswordRoute
  ProtectedHowItWorksRoute: typeof ProtectedHowItWorksRoute
  ProtectedOrdersOrderIdRoute: typeof ProtectedOrdersOrderIdRoute
  ProtectedProductsProductIdRoute: typeof ProtectedProductsProductIdRoute
  ProtectedCheckoutIndexRoute: typeof ProtectedCheckoutIndexRoute
  ProtectedOrdersIndexRoute: typeof ProtectedOrdersIndexRoute
  ProtectedProductsIndexRoute: typeof ProtectedProductsIndexRoute
  ProtectedProfileIndexRoute: typeof ProtectedProfileIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedAboutRoute: ProtectedAboutRoute,
  ProtectedCartRoute: ProtectedCartRoute,
  ProtectedChangePasswordRoute: ProtectedChangePasswordRoute,
  ProtectedHowItWorksRoute: ProtectedHowItWorksRoute,
  ProtectedOrdersOrderIdRoute: ProtectedOrdersOrderIdRoute,
  ProtectedProductsProductIdRoute: ProtectedProductsProductIdRoute,
  ProtectedCheckoutIndexRoute: ProtectedCheckoutIndexRoute,
  ProtectedOrdersIndexRoute: ProtectedOrdersIndexRoute,
  ProtectedProductsIndexRoute: ProtectedProductsIndexRoute,
  ProtectedProfileIndexRoute: ProtectedProfileIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
